- Behance.net => front end

--Addin VSCode
Bracket pair: pair cặp dấu () hoặc {}
Live server: không cần refresh page html để apply thay đổi mà server tự update
Prettier code: phân màu các mã code cho dễn nhìn
VScode-icons: đánh icon cho các file để dễ nhìn.

--- Buổi 3
CSS selector
1. simple selector:
    - id
    - class
    - element
    - group element
2. Combinator selector
    - Kết hợp giữa element và id hoặc class: ví du: p.classname
    - chọn các element trong 1 element cha: ví dụ: div page
    - Chọn các element là con cấp 1 của element cha: ví du: div > p (get các thẻ p là con cấp 1 của div)
3. Pseudo class selector
4. Pseudo element selector
5. Attribute selector
    - Ví dụ [name="hello"], 
    - ví dụ: .classname1.ClassName2: get các thẻ html mà có 2 classname
    - Ví du: [class*="hello"]: Get các thẻ html có thuộc tính class bắt đầu bằng chữ hello

Độ ưu tiên CSS:
- CSS selector (ID > attribute/class > element)
- Theo thứ tự;
- Theo cách sử dụng; Inline > internal > extenal

--- Buổi 4
animation:
 - transform - trasision
 - @keyframes ten
    from{

    }
    to{

    }
    0%{

    }
    50%{

    }
    100%{

    }

-- Buổi 5
Có 5 kỹ thuật chia layout
1. Table: Kỹ thuật cũ.
2. Column: Thường dùng cho các trạng có nhiều chữ.
3. Float*: Cột không cao đều nhau
4. Grid: Không hỗ trợ trình duyệt IE
5. Flex (Flexbox)*: Hỗ trợ IE, chỉ có 1 số thuộc tính không hỗ trợ IE.

comment: Ctrl + K + C

--------------------------
Buổi 8:
- JS là ngôn ngữ lập trình phổ biến nhất thế giới
- JS dễ học do cần tuân thủ nhiều quy tắc như các ngôn ngữ lập trình khác
- JS dùng để lập trình cho các hoạt động của web. ngoài ra có thể được dùng làm backend


- JS có thể thay đổi:
    1. Nội dung của 1 thẻ html: ví dụ: document.getElementById("demo").innerHTML = ...
    2. giá trị thuộc tính của 1 thẻ html. Ví dụ: document.getElementById("demo").src = ...
    3. Thay đổi giá trị thuộc tính của css. Ví dụ: document.getElementById("demo").style.font-size = ...

- JS có 2 cách để triển khai trong 1 tài liệu html
    1. Viết JS trong 1 cặp thẻ <script></script>
    2. Viết trong 1 file .js và import vào tài liệu html thông qua thẻ <script src="xxx.js"></script>

- syntax
    1. Khai báo biến
        - var:
        - left
        - const
    2. Khai báo hàm
    3. Kiểu dữ liệu
    4. DOM trong JS
    5. Vòng lặp, hàm trong JS hỗ trợ
    6. JSON: 
        javascript object notation. Cấu trúc chuỗi text theo dạng đối tượng trong JS. Trao đổi dữ liệu qua lại giữa các nền tảng
        - Convert từ Object => JSON: JSON.stringigy(object)
        - convert từ JSON -> Object: JSON.parse(json)
    7. Ajax
    8. Array:
        - mảng là 1 Object
        - Hàm cơ bản;
            sort(): sắp xếp
            push(6): Thêm phần tử vào cuối mảng
            pop(): Xóa phần tử ở cuối mảng
            shift(): xóa phần tử đầu mảng
            splice(vị trí phần tử đầu tiên,n): xóa n phần tử bắt đầu ở vị trí đầu tiên 
            concat([mảng]): nối mảng
            join("-"): print phần tử trong mảng phân tách bới -
    9. String
        - concat(str): công chuỗi
        - lengh: số lượng kí tự của String
        - chartAt(index): lấy kí tự ở vị trí index trong chuỗi
        - indexOf(strFind): Tìm kiếm chuối strFind từ đầu xuống cuối
        - lastIndexOf(str): Tìm kiếm chuỗi str từ cuối lên đầu
        - subStr(startIndex, n): cắt n kí tự từ vị trí startIndex
        - subString(startIndex, endIndex): cắt chuỗi từ vị trí start đến vị trí end 
        - split(str): chia chuỗi thành array theo str.
        - replace(str1, str2): thay thế chuỗi str1 thành chuỗi str2. Chuỗi gốc không bị thay đổi.
    10. Object
        - Khởi tạo bằng từ khóa new
        - khởi tạo và gán giá trị:
            var personA = {
                name: "Phuong",
                age: 20,
                eat: function (){
                    return this.name + " eat"
                }
            }
        - Thêm thuộc tính cho đối tượng:
            personA.address = "Ha Noi"
        - Thêm hành vi cho đối tượng:
            person.sleep = function(){
                return this.name + " sleep"
            }
        - ES 5 hỗ trợ hàm set get:
            set setName(name){
                this.name = name;
            }

            get getName(){
                return this.name;
            }

            person.setName = "PhuongNH";
            var name = person.getName;
        - Object.keys(object): => get mảng key của JSON

-------------------------------------

 - set sự kiện trong js: addEvenListener
 - Mảng a = [...b]: a copy các phần tử của b. b không bị ảnh hưởng
        a = b => mảng a hoặc b thay đổi => mảng còn lại cũng bị thay đổi
        thêm dòng code debugger để đặt debug
        F5: Skip debug
        F10; Next line
        F11; into function